<?xml version="1.0" encoding="UTF-8"?>
<!-- #%L MuleSoft Training - Anypoint Platform Development: Level 2 %% Copyright 
	(C) 2019 - 2023 MuleSoft, Inc. All rights reserved. http://www.mulesoft.com 
	%% The software in this package is published under the terms of the Creative 
	Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public 
	License, a copy of which has been included with this distribution in the 
	LICENSE.txt file. #L% -->
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:api-gateway="http://www.mulesoft.org/schema/mule/api-gateway" xmlns:tls="http://www.mulesoft.org/schema/mule/tls" xmlns:secure-properties="http://www.mulesoft.org/schema/mule/secure-properties" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="     http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd  http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd  http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd   http://www.mulesoft.org/schema/mule/secure-properties http://www.mulesoft.org/schema/mule/secure-properties/current/mule-secure-properties.xsd  http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd  http://www.mulesoft.org/schema/mule/api-gateway http://www.mulesoft.org/schema/mule/api-gateway/current/mule-api-gateway.xsd    http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd  http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd  http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd  http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd  ">
  <import file="api-invocation-common.xml" doc:name="Import api-invocation-common.xml"/>
  <global-property name="env" value="dev" doc:name="Default env to dev"/>
  <!-- 1st def of a property is preserved, so env-dependent takes priority 
		over env-independent -->
  <configuration-properties file="${env}-properties.yaml" doc:name="Env Config Props"/>
  <secure-properties:config file="${env}-secure-properties.yaml" key="${encrypt.key}" name="secureEnvPropsConfig" doc:name="Secure Env Config Props">
    <secure-properties:encrypt algorithm="Blowfish"/>
  </secure-properties:config>
  <configuration-properties file="properties.yaml" doc:name="Config Props"/>
  <tls:context name="apiTLSContext" doc:name="TLS Context">
    <tls:key-store type="${tls.keystore.type}" path="${tls.keystore.path}" password="${secure::tls.keystore.password}" keyPassword="${secure::tls.keystore.keyPassword}" alias="${tls.keystore.alias}"/>
  </tls:context>
  <http:listener-config name="apiHttpListenerConfig" doc:name="API Listener HTTP Config">
    <http:listener-connection host="0.0.0.0" protocol="HTTPS" port="${https.port}" tlsContext="apiTLSContext"/>
  </http:listener-config>
  <apikit:config name="apiConfig" api="${api.raml}" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" keepApiBaseUri="true" doc:name="APIKit Config"/>
  <api-gateway:autodiscovery apiId="${api.id}" flowRef="api-main" doc:name="API Autodiscovery"/>
  <http:request-config name="flightsManagementSapiConfig" responseTimeout="${external.flightsManagementSapi.responseTimeout}" basePath="${external.flightsManagementSapi.basePath}">
    <http:request-connection host="${external.flightsManagementSapi.host}" protocol="HTTPS">
      <http:authentication>
        <http:basic-authentication username="${secure::app.client_id}" password="${secure::app.client_secret}"/>
      </http:authentication>
    </http:request-connection>
  </http:request-config>
  <http:request-config name="passengerDataSapiConfig" responseTimeout="${external.passengerDataSapi.responseTimeout}" basePath="${external.passengerDataSapi.basePath}">
    <http:request-connection host="${external.passengerDataSapi.host}" protocol="HTTPS">
      <http:authentication>
        <http:basic-authentication username="${secure::app.client_id}" password="${secure::app.client_secret}"/>
      </http:authentication>
    </http:request-connection>
  </http:request-config>
  <http:request-config name="paypalSapiConfig" responseTimeout="${external.paypalSapi.responseTimeout}" basePath="${external.paypalSapi.basePath}">
    <http:request-connection host="${external.paypalSapi.host}" protocol="HTTPS">
      <http:authentication>
        <http:basic-authentication username="${secure::app.client_id}" password="${secure::app.client_secret}"/>
      </http:authentication>
    </http:request-connection>
  </http:request-config>
  <os:object-store name="pnrObjectStore" doc:name="Object store" entryTtl="${os.ttl}" entryTtlUnit="HOURS" expirationInterval="${os.interval}" persistent="true"/>
  <ee:object-store-caching-strategy name="passengerCachingStrategy" keyGenerationExpression="#[vars.ticket.ticketHolderPassPortNo]" doc:name="Caching Strategy">
    <os:private-object-store alias="passengerObjectStore" persistent="true" maxEntries="${cache.passenger.maxEntries}" entryTtl="${cache.passenger.ttl}" entryTtlUnit="DAYS" expirationInterval="${cache.passenger.interval}" expirationIntervalUnit="DAYS"/>
  </ee:object-store-caching-strategy>
</mule>

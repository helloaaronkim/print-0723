<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  MuleSoft Training - Anypoint Platform Development: Level 2
  %%
  Copyright (C) 2019 - 2023 MuleSoft, Inc. All rights reserved. http://www.mulesoft.com
  %%
  The software in this package is published under the terms of the
  Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License,
  a copy of which has been included with this distribution in the LICENSE.txt file.
  #L%
  -->
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:xml-module="http://www.mulesoft.org/schema/mule/xml-module" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:anypoint-mq="http://www.mulesoft.org/schema/mule/anypoint-mq" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:api-gateway="http://www.mulesoft.org/schema/mule/api-gateway" xmlns:tls="http://www.mulesoft.org/schema/mule/tls" xmlns:secure-properties="http://www.mulesoft.org/schema/mule/secure-properties" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="  http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd   http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd  http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd   http://www.mulesoft.org/schema/mule/secure-properties http://www.mulesoft.org/schema/mule/secure-properties/current/mule-secure-properties.xsd  http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd  http://www.mulesoft.org/schema/mule/api-gateway http://www.mulesoft.org/schema/mule/api-gateway/current/mule-api-gateway.xsd    http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd  http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd  http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd  http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd  http://www.mulesoft.org/schema/mule/anypoint-mq http://www.mulesoft.org/schema/mule/anypoint-mq/current/mule-anypoint-mq.xsd  http://www.mulesoft.org/schema/mule/xml-module http://www.mulesoft.org/schema/mule/xml-module/current/mule-xml-module.xsd  http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
  <import file="api-invocation-common.xml" doc:name="Import api-invocation-common.xml"/>
  <global-property name="env" value="dev" doc:name="Default env to dev"/>
  <!-- 1st def of a property is preserved, so env-dependent takes priority over env-independent -->
  <configuration-properties file="${env}-properties.yaml" doc:name="Env Config Props"/>
  <secure-properties:config file="${env}-secure-properties.yaml" key="${encrypt.key}" name="secureEnvPropsConfig" doc:name="Secure Env Config Props">
    <secure-properties:encrypt algorithm="Blowfish"/>
  </secure-properties:config>
  <configuration-properties file="properties.yaml" doc:name="Config Props"/>
  <apikit:config name="apiConfig" api="${api.raml}" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" keepApiBaseUri="true"/>
  <api-gateway:autodiscovery apiId="${api.id}" flowRef="api-main" doc:name="API Autodiscovery"/>
  <tls:context name="flightsWSTLSContext" doc:name="Flights WS TLS Context">
    <tls:key-store type="${flights.keystore.type}" path="${flights.keystore.path}" password="${secure::flights.keystore.password}" keyPassword="${secure::flights.keystore.keyPassword}" alias="${flights.keystore.alias}"/>
  </tls:context>
  <tls:context name="apiTLSContext" doc:name="TLS Context">
    <tls:key-store type="${tls.keystore.type}" path="${tls.keystore.path}" password="${secure::tls.keystore.password}" keyPassword="${secure::tls.keystore.keyPassword}" alias="${tls.keystore.alias}"/>
  </tls:context>
  <http:listener-config name="apiHttpListenerConfig" doc:name="API Listener HTTP Config">
    <http:listener-connection host="0.0.0.0" protocol="HTTPS" port="${https.port}" tlsContext="apiTLSContext"/>
  </http:listener-config>
  <http:request-config name="flightsWSHTTPConfig" followRedirects="true" responseTimeout="${flights.responseTimeoutMillis}" doc:name="Flights WS HTTP Request configuration">
    <http:request-connection protocol="HTTPS" tlsContext="flightsWSTLSContext"/>
  </http:request-config>
  <wsc:config name="flightsWSCConfig" doc:name="Flights WS Consumer Config">
    <wsc:connection wsdlLocation="${flights.soap.wsdl}" service="${flights.soap.service}" port="${flights.soap.port}" address="${flights.soap.address}">
      <wsc:custom-transport-configuration>
        <wsc:http-transport-configuration requesterConfig="flightsWSHTTPConfig"/>
      </wsc:custom-transport-configuration>
    </wsc:connection>
  </wsc:config>
  <vm:config name="vmConfig" doc:name="VM Config">
    <vm:queues>
      <vm:queue queueName="${vm.cancelNotif.q.name}" queueType="PERSISTENT" maxOutstandingMessages="${vm.cancelNotif.q.size}"/>
      <vm:queue queueName="${vm.cancelNotif.dlq.name}" queueType="PERSISTENT" maxOutstandingMessages="${vm.cancelNotif.dlq.size}"/>
    </vm:queues>
  </vm:config>
  <anypoint-mq:config name="amqConfig" doc:name="Anypoint MQ Config">
    <anypoint-mq:connection clientId="${secure::anypoint.mq.client_id}" clientSecret="${secure::anypoint.mq.client_secret}" url="${anypoint.mq.url}"/>
  </anypoint-mq:config>
  <xml-module:config name="xmlConfig" doc:name="XML Config"/>
  <json:config name="jsonConfig" doc:name="JSON Config"/>
</mule>

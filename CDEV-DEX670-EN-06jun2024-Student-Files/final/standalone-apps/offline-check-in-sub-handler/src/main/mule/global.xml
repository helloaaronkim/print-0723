<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  MuleSoft Training - Anypoint Platform Development: Level 2
  %%
  Copyright (C) 2019 - 2023 MuleSoft, Inc. All rights reserved. http://www.mulesoft.com
  %%
  The software in this package is published under the terms of the
  Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License,
  a copy of which has been included with this distribution in the LICENSE.txt file.
  #L%
  -->
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:tls="http://www.mulesoft.org/schema/mule/tls" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:secure-properties="http://www.mulesoft.org/schema/mule/secure-properties" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="  http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd   http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd   http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd   http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd   http://www.mulesoft.org/schema/mule/secure-properties http://www.mulesoft.org/schema/mule/secure-properties/current/mule-secure-properties.xsd    http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd  http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/current/mule-sftp.xsd  http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd  http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd    http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">
  <!-- mkdir /tmp/todo; cp src/main/resources/examples/offlinecheckins.csv /tmp/todo/ -->
  <import file="api-invocation-common.xml" doc:name="Import api-invocation-common.xml"/>
  <global-property name="env" value="dev" doc:name="Default env to dev"/>
  <!-- 1st def of a property is preserved, so env-dependent takes priority over env-independent -->
  <configuration-properties file="${env}-properties.yaml" doc:name="Env Config Props"/>
  <secure-properties:config file="${env}-secure-properties.yaml" key="${encrypt.key}" name="secureEnvPropsConfig" doc:name="Secure Env Config Props">
    <secure-properties:encrypt algorithm="Blowfish"/>
  </secure-properties:config>
  <configuration-properties file="properties.yaml" doc:name="Config Props"/>
  <http:request-config name="flightsManagementSapiConfig" responseTimeout="${external.flightsManagementSapi.responseTimeout}" basePath="${external.flightsManagementSapi.basePath}">
    <http:request-connection host="${external.flightsManagementSapi.host}" protocol="HTTPS">
      <http:authentication>
        <http:basic-authentication username="${secure::app.client_id}" password="${secure::app.client_secret}"/>
      </http:authentication>
    </http:request-connection>
  </http:request-config>
  <vm:config name="vmConfig" doc:name="VM Config">
    <vm:queues>
      <vm:queue queueName="${dlq.flightsMgmtSAPI}" queueType="PERSISTENT"/>
      <vm:queue queueName="${dlq.passengerDataSystem}" queueType="PERSISTENT"/>
    </vm:queues>
  </vm:config>
  <sftp:config name="sftpConfig" timeBetweenSizeCheck="${files.poll.sizeCheckIntervalSeconds}" timeBetweenSizeCheckUnit="SECONDS" doc:name="SFTP Config">
    <sftp:connection host="${ftpserver.host}" username="${ftpserver.username}" password="${secure::ftpserver.password}" workingDir="${ftpserver.basedir}"/>
  </sftp:config>
  <file:config name="fileConfig" timeBetweenSizeCheck="${files.poll.sizeCheckIntervalSeconds}" timeBetweenSizeCheckUnit="SECONDS" doc:name="File Config">
    <file:connection workingDir="${filesystem.basedir}"/>
  </file:config>
  <tls:context name="apiTLSContext" doc:name="API TLS Context">
    <tls:key-store type="${tls.keystore.type}" path="${tls.keystore.path}" password="${secure::tls.keystore.password}" keyPassword="${secure::tls.keystore.keyPassword}" alias="${tls.keystore.alias}"/>
  </tls:context>
  <http:listener-config name="apiHttpListenerConfig">
    <http:listener-connection host="0.0.0.0" protocol="HTTPS" port="${https.port}" tlsContext="apiTLSContext"/>
  </http:listener-config>
  <db:config name="postgresDBConfig" doc:name="Database Config">
    <db:generic-connection url="${db.url}" driverClassName="${db.driver}" user="${secure::db.user}" password="${secure::db.userpass}">
      <!-- every DB operation benefits from minimal synchronous reconnect -->
      <!-- if there were DB listeners (there are none) they should override this to reconnect-forever -->
      <reconnection>
        <reconnect count="3"/>
      </reconnection>
    </db:generic-connection>
  </db:config>
</mule>

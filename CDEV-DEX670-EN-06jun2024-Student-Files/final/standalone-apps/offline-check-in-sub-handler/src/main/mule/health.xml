<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  MuleSoft Training - Anypoint Platform Development: Level 2
  %%
  Copyright (C) 2019 - 2023 MuleSoft, Inc. All rights reserved. http://www.mulesoft.com
  %%
  The software in this package is published under the terms of the
  Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License,
  a copy of which has been included with this distribution in the LICENSE.txt file.
  #L%
  -->
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:resilience="http://www.mulesoft.org/schema/mule/resilience" xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="  http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/current/mule-sftp.xsd   http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd   http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd   http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd   http://www.mulesoft.org/schema/mule/resilience http://www.mulesoft.org/schema/mule/resilience/current/mule-resilience.xsd http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd ">
  <!--
  in dev and test (standalone deployment):
  curl -ik https://localhost:8081/alive
  curl -ik https://localhost:8081/ready
  -->
  <import file="health-common.xml" doc:name="Import health-common.xml"/>
  <sub-flow name="check-all-dependencies-are-alive">
    <scatter-gather doc:name="Scatter-Gather">
      <route>
        <flow-ref name="check-flight-management-dependency" doc:name="Flight Managment SAPI Is Alive"/>
      </route>
      <route>
        <flow-ref name="check-postgres-is-alive" doc:name="check-postgres-is-alive"/>
      </route>
      <!-- Waiting for SFTP server -->
      <!-- 
      <route>
          <flow-ref doc:name="check-sftp-dependency" name="check-sftp-dependency" />
      </route>
       -->
    </scatter-gather>
  </sub-flow>
  <flow name="check-flight-management-dependency">
    <resilience:is-endpoint-alive url="${external.flightsManagementSapi.aliveUrl}"/>
    <validation:is-true expression="#[payload]"/>
  </flow>
  <flow name="check-postgres-is-alive">
    <set-variable variableName="livenessEndpoint" value="${db.host}" doc:name="livenessEndpoint"/>
    <db:select doc:name="Check DB" config-ref="postgresDBConfig">
      <db:sql>SELECT 1 as status</db:sql>
    </db:select>
    <logger level="DEBUG" message="#['Dependency at $(vars.livenessEndpoint) is alive']" doc:name="END"/>
    <error-handler>
      <on-error-propagate enableNotifications="false" logException="false" doc:name="On Error Propagate">
        <logger level="ERROR" message="#['Dependency at $(vars.livenessEndpoint) is NOT alive']" doc:name="EXCEPTION"/>
      </on-error-propagate>
    </error-handler>
  </flow>
  <flow name="check-sftp-dependency">
    <sftp:list config-ref="sftpConfig" directoryPath="${files.fromdir}" doc:name="List all file"/>
    <logger level="DEBUG" message="#['Dependency at $(vars.livenessEndpoint) is alive']" doc:name="END"/>
    <error-handler>
      <on-error-propagate enableNotifications="false" logException="false" doc:name="On Error Propagate">
        <logger level="ERROR" message="#['Dependency at $(vars.livenessEndpoint) is NOT alive']" doc:name="EXCEPTION"/>
      </on-error-propagate>
    </error-handler>
  </flow>
</mule>

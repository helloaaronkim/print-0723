<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  MuleSoft Training - Anypoint Platform Development: Level 2
  %%
  Copyright (C) 2019 - 2023 MuleSoft, Inc. All rights reserved. http://www.mulesoft.com
  %%
  The software in this package is published under the terms of the
  Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License,
  a copy of which has been included with this distribution in the LICENSE.txt file.
  #L%
  -->
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:api-gateway="http://www.mulesoft.org/schema/mule/api-gateway" xmlns:tls="http://www.mulesoft.org/schema/mule/tls" xmlns:secure-properties="http://www.mulesoft.org/schema/mule/secure-properties" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:oauth="http://www.mulesoft.org/schema/mule/oauth" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation=" http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd   http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd  http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd  http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd  http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd   http://www.mulesoft.org/schema/mule/secure-properties http://www.mulesoft.org/schema/mule/secure-properties/current/mule-secure-properties.xsd  http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd  http://www.mulesoft.org/schema/mule/api-gateway http://www.mulesoft.org/schema/mule/api-gateway/current/mule-api-gateway.xsd    http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd  http://www.mulesoft.org/schema/mule/oauth http://www.mulesoft.org/schema/mule/oauth/current/mule-oauth.xsd">
  <!--
  curl -ik -u 'client_id:client_secret' https://localhost:8081/api/v1/payments -XPOST -H 'Content-Type: application/json' -d '{"amount": 12.34, "description": "something"}'
  paymentID="PAY-1B56960729604235TKQQIYVY"
  curl -ik -u 'client_id:client_secret' https://localhost:8081/api/v1/payments/$paymentID/approval -XPUT -H 'Content-Type: application/json' -d '{"payerID":"STJ8222K092ST"}'
  -->
  <flow name="api-main">
    <http:listener config-ref="apiHttpListenerConfig" path="/api/${api.majorVersion}/*">
      <http:response statusCode="#[vars.httpStatus default 200]">
        <http:headers>#[vars.outboundHeaders default {}]</http:headers>
      </http:response>
      <http:error-response statusCode="#[vars.httpStatus default 500]">
        <http:body><![CDATA[#[output application/json --- payload]]]></http:body>
        <http:headers>#[vars.outboundHeaders default {}]</http:headers>
      </http:error-response>
    </http:listener>
    <apikit:router config-ref="apiConfig"/>
    <error-handler ref="api-error-handler"/>
  </flow>
  <flow name="api-console">
    <http:listener config-ref="apiHttpListenerConfig" path="/console/${api.majorVersion}/*">
      <http:response statusCode="#[vars.httpStatus default 200]">
        <http:headers>#[vars.outboundHeaders default {}]</http:headers>
      </http:response>
      <http:error-response statusCode="#[vars.httpStatus default 500]">
        <http:body>#[payload]</http:body>
        <http:headers>#[vars.outboundHeaders default {}]</http:headers>
      </http:error-response>
    </http:listener>
    <apikit:console config-ref="apiConfig"/>
    <error-handler ref="api-console-error-handler"/>
  </flow>
  <flow name="post:\payments:application\json:apiConfig">
    <flow-ref name="create-payment" doc:name="create-payment"/>
    <set-payload value="#[output application/json --- {paymentID: payload}]" doc:name="Success response"/>
  </flow>
  <flow name="put:\payments\(PaymentID)\approval:application\json:apiConfig">
    <set-variable variableName="paymentID" value="#[attributes.uriParams.PaymentID]" doc:name="paymentID"/>
    <flow-ref name="approve-payment" doc:name="approve-payment"/>
    <validation:is-true expression="#[payload]" doc:name="Payload true else raise PAYMENT_NOT_EXECUTED">
      <error-mapping targetType="APP:PAYMENT_NOT_EXECUTED"/>
    </validation:is-true>
    <set-payload value="#[output application/json --- {status: 'Payment executed.'}]" doc:name="Success response"/>
    <error-handler>
      <on-error-continue when="#[(error.errorType.namespace == 'APP' and error.errorType.identifier=='PAYMENT_NOT_EXECUTED') or (error.errorType.namespace == 'EXT' and error.errorType.identifier=='CANT_EXECUTE_PAYMENT' and vars.lastError.errorType.identifier=='BAD_REQUEST')]">
        <set-variable variableName="httpStatus" value="400" doc:name="httpStatus=400"/>
        <set-payload value="#[output application/json --- {status: 'Payment not executed.'}]" doc:name="Failure response"/>
      </on-error-continue>
    </error-handler>
  </flow>
</mule>
